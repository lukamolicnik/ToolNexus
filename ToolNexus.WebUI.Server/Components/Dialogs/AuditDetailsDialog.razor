@using ToolNexus.Application.Audit.DTOs
@using MudBlazor

@if (IsVisible && AuditTrail != null)
{
    <div style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 9999; display: flex; justify-content: center; align-items: center;">
        <MudPaper Class="pa-6" Style="max-width: 800px; width: 90vw; max-height: 90vh; overflow-y: auto;">
            <MudStack Spacing="3">
                <MudStack Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
                    <MudText Typo="Typo.h5">Podrobnosti spremembe</MudText>
                    <MudIconButton Icon="@Icons.Material.Filled.Close" OnClick="HandleClose" />
                </MudStack>

                <MudGrid>
                    <MudItem xs="12">
                        <MudText><strong>Datum:</strong> @AuditTrail.Timestamp.ToString("dd.MM.yyyy HH:mm:ss")</MudText>
                    </MudItem>
                    <MudItem xs="12">
                        <MudText><strong>Uporabnik:</strong> @AuditTrail.UserName</MudText>
                    </MudItem>
                    <MudItem xs="12">
                        <MudText><strong>Entiteta:</strong> @AuditTrail.EntityType</MudText>
                    </MudItem>
                    <MudItem xs="12">
                        <MudText><strong>Akcija:</strong> @GetActionDisplay(AuditTrail.Action)</MudText>
                    </MudItem>
                    
                    @if (AuditTrail.ChangeDetails != null && AuditTrail.ChangeDetails.Any())
                    {
                        <MudItem xs="12" Class="mt-4">
                            <MudText Typo="Typo.h6">Spremembe:</MudText>
                            <MudSimpleTable Dense="true" Striped="true" Class="mt-2">
                                <thead>
                                    <tr>
                                        <th>Lastnost</th>
                                        <th>Stara vrednost</th>
                                        <th>Nova vrednost</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var change in AuditTrail.ChangeDetails)
                                    {
                                        <tr>
                                            <td>@change.PropertyName</td>
                                            <td>@(change.OldValue?.ToString() ?? "-")</td>
                                            <td>@(change.NewValue?.ToString() ?? "-")</td>
                                        </tr>
                                    }
                                </tbody>
                            </MudSimpleTable>
                        </MudItem>
                    }
                </MudGrid>
            </MudStack>
        </MudPaper>
    </div>
}

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public AuditTrailDto? AuditTrail { get; set; }
    [Parameter] public EventCallback OnResult { get; set; }

    private async Task HandleClose()
    {
        await OnResult.InvokeAsync();
    }

    private string GetActionDisplay(string action)
    {
        return action switch
        {
            "Create" => "Ustvarjeno",
            "Update" => "Posodobljeno",
            "Delete" => "Izbrisano",
            _ => action
        };
    }
}