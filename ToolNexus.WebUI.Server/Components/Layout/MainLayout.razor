@using Microsoft.AspNetCore.Authentication
@using System.Security.Claims
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IUserService UserService

<MudThemeProvider Theme="customTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar Elevation="1">
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
                <MudSpacer />
                <MudText Typo="Typo.h5" Class="ml-3">ToolNexus</MudText>
                <MudSpacer />

                @* Uporabniške informacije in odjava *@
                <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
                    @if (user != null)
                    {
                        <MudText Typo="Typo.body2">@user.FullName</MudText>
                        <MudChip Size="Size.Small"
                        Color="@GetRoleColor()"
                        T="string">
                            @user.UserRole?.Name
                        </MudChip>
                        <MudTooltip Text="Odjavi se">
                            <a href="/logout" style="color: inherit; text-decoration: none;">
                                <MudIcon Icon="@Icons.Material.Filled.Logout" />
                            </a>
                        </MudTooltip>
                    }
                    else
                    {
                        <MudProgressCircular Size="Size.Small" Indeterminate="true" />
                        <MudText Typo="Typo.body2">Nalagam...</MudText>
                    }
                </MudStack>
            </MudAppBar>

            <MudDrawer @bind-Open="drawerOpen" Elevation="1" ClipMode="DrawerClipMode.Always">
                <NavMenu />
            </MudDrawer>

            <MudMainContent>
                <MudContainer MaxWidth="MaxWidth.False" Class="pa-4">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <MudMainContent>
            @Body
        </MudMainContent>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    public HttpContext HttpContext { get; set; }

    private UserDto user;

    bool drawerOpen = true;

    private MudTheme customTheme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = "#225da5",
            PrimaryDarken = "#1a4980",
            PrimaryLighten = "#4d82c4",
            Secondary = "#594AE2",
            AppbarBackground = "#225da5",
            DrawerBackground = "#FFF",
            DrawerText = "rgba(0,0,0, 0.7)",
            AppbarText = "#FFF"
        }
    };

    protected override async Task OnInitializedAsync()
    {
        // Preverimo samo če je uporabnik prijavljen za pridobitev podatkov
        if (HttpContext.User.Identity.IsAuthenticated)
        {
            var userId = Int32.Parse(HttpContext.User.Identities
                .Select(i => i.Claims.FirstOrDefault(c => c.Type == "UserId")?.Value)
                .FirstOrDefault());

            user = await UserService.GetUserByIdAsync(userId);
            StateHasChanged(); // Sprožimo re-render
        }
    }

    void DrawerToggle()
    {
        drawerOpen = !drawerOpen;
    }


    private Color GetRoleColor() => user?.UserRole?.Code switch
    {
        "ADMIN" => Color.Error,
        "SUPERVISOR" => Color.Warning,
        "WORKER" => Color.Info,
        _ => Color.Default
    };
}
